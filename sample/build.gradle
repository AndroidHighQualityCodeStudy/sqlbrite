apply plugin: 'com.android.application'

dependencies {
  compile rootProject.ext.supportV4
  compile rootProject.ext.supportAnnotations

  compile rootProject.ext.dagger
  annotationProcessor rootProject.ext.daggerCompiler

  compile rootProject.ext.butterKnifeRuntime
  annotationProcessor rootProject.ext.butterKnifeCompiler
  compile rootProject.ext.timber
  compile rootProject.ext.rxJava
  compile rootProject.ext.rxAndroid
  compile rootProject.ext.rxBinding

  provided rootProject.ext.autoValue
  annotationProcessor rootProject.ext.autoValue
  annotationProcessor rootProject.ext.autoValueParcel

  compile project(':sqlbrite')
  compile rootProject.ext.supportSqliteFramework
}

def isCi() {
  return "true".equals(System.getenv('CI'))
}

android {
  compileSdkVersion versions.compileSdk
  buildToolsVersion versions.buildTools

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  lintOptions {
    textOutput 'stdout'
    textReport true
    ignore 'InvalidPackage' // Provided AutoValue pulls in Guava and friends. Doesn't end up in APK.
  }

  dexOptions {
    preDexLibraries = !isCi()
  }

  defaultConfig {
    minSdkVersion versions.minSdk
    targetSdkVersion versions.compileSdk
    applicationId 'com.example.sqlbrite.todo'

    versionCode 1
    versionName '1.0'
  }

  signingConfigs {
    debug {
      storeFile file('debug.keystore')
      storePassword 'android'
      keyAlias 'android'
      keyPassword 'android'
    }
  }

  buildTypes {
    debug {
      applicationIdSuffix '.development'
      signingConfig signingConfigs.debug
    }
  }
}
